datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Color {
    RED
    BLUE
    GREEN
    YELLOW
}

enum MessageType {
    FILE
    TEXT
}

enum RecipientType {
    DIRECT
    GROUP
}

model User {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    username String
    password String
    email    String @unique

    picUrl   String? @default("")
    picColor Color   @default(BLUE)

    createdAt       DateTime  @default(now())
    updatedAt       DateTime  @updatedAt
    messagesSended  Message[] @relation("UserSended")
    messageRecipent Message[] @relation("UserRecipient")

    channelAdmin Group[] @relation("UserAdmin")

    channelMember   Group[]  @relation("UserMembers", fields: [channelMemberId], references: [id])
    channelMemberId String[] @db.ObjectId
}

model Message {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    messageType MessageType
    content     String

    sender   User   @relation("UserSended", fields: [senderId], references: [id])
    senderId String @db.ObjectId

    recipientType RecipientType

    recipientGroup   Group?  @relation("GroupRecipient", references: [id], fields: [recipientGroupId])
    recipientGroupId String? @db.ObjectId

    recipient   User?   @relation("UserRecipient", references: [id], fields: [recipientId])
    recipientId String? @db.ObjectId

    fileSize Int?
}

model Group {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title      String
    desciption String?

    admin   User   @relation("UserAdmin", references: [id], fields: [adminId])
    adminId String @db.ObjectId

    members   User[]   @relation("UserMembers", fields: [membersId], references: [id])
    membersId String[] @db.ObjectId

    messages Message[] @relation("GroupRecipient")
}
